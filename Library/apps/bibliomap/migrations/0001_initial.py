# Generated by Django 2.2.3 on 2019-07-24 04:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('surname', models.CharField(max_length=45)),
                ('birthDate', models.DateField(blank=True, null=True)),
                ('state', models.BooleanField(default=True, verbose_name='available')),
            ],
            options={
                'ordering': ['name', 'surname', 'birthDate'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=45)),
                ('isbn', models.CharField(blank=True, max_length=45, null=True, verbose_name='ISBN')),
                ('year', models.CharField(blank=True, max_length=4, null=True)),
                ('coverPage', models.ImageField(upload_to='coverPage')),
                ('state', models.BooleanField(default=True, verbose_name='available')),
                ('authors', models.ManyToManyField(to='bibliomap.Author')),
            ],
            options={
                'ordering': ['title', 'editorial', 'year'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.BooleanField(default=True, verbose_name='available')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('country', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.BooleanField(default=True, verbose_name='available')),
            ],
            options={
                'ordering': ['name', 'city', 'country'],
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daysForHouse', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator('^\\d{1,2}$')])),
                ('daysForClass', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator('^\\d{1,2}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('location', models.ImageField(upload_to='location')),
                ('state', models.BooleanField(default=True, verbose_name='available')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('state', models.BooleanField(default=True, verbose_name='active')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliomap.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date', 'user', 'book'],
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('returnDate', models.DateField(blank=True, null=True, verbose_name='Return Date')),
                ('deadline', models.DateField(verbose_name='Deadline')),
                ('state', models.BooleanField(default=True, verbose_name='available')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliomap.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date', 'user', 'book'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliomap.Category'),
        ),
        migrations.AddField(
            model_name='book',
            name='editorial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliomap.Editorial'),
        ),
        migrations.AddField(
            model_name='book',
            name='loans',
            field=models.ManyToManyField(related_name='bookLoans', through='bibliomap.Loan', to=settings.AUTH_USER_MODEL, verbose_name='Loans'),
        ),
        migrations.AddField(
            model_name='book',
            name='reservations',
            field=models.ManyToManyField(related_name='bookReservations', through='bibliomap.Reservation', to=settings.AUTH_USER_MODEL, verbose_name='Reservations'),
        ),
        migrations.AddField(
            model_name='book',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliomap.Section'),
        ),
    ]
